/*
* generated by Xtext
*/
package hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import hu.bme.mit.rnd.behavior.text.services.BehaviorDSLGrammarAccess;

public class BehaviorDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private BehaviorDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr.internal.InternalBehaviorDSLParser createParser() {
		hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr.internal.InternalBehaviorDSLParser result = new hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr.internal.InternalBehaviorDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTransitionAccess().getAlternatives_8(), "rule__Transition__Alternatives_8");
					put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_8_0(), "rule__Transition__Group_8_0__0");
					put(grammarAccess.getTransitionAccess().getGroup_8_1(), "rule__Transition__Group_8_1__0");
					put(grammarAccess.getTransitionAccess().getGroup_8_1_3(), "rule__Transition__Group_8_1_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_9(), "rule__Transition__Group_9__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getSystemAccess().getNameAssignment_1(), "rule__System__NameAssignment_1");
					put(grammarAccess.getSystemAccess().getEventsAssignment_3(), "rule__System__EventsAssignment_3");
					put(grammarAccess.getSystemAccess().getComponentsAssignment_4(), "rule__System__ComponentsAssignment_4");
					put(grammarAccess.getComponentAccess().getNameAssignment_1(), "rule__Component__NameAssignment_1");
					put(grammarAccess.getComponentAccess().getStatesAssignment_3(), "rule__Component__StatesAssignment_3");
					put(grammarAccess.getComponentAccess().getCurrentStateAssignment_5(), "rule__Component__CurrentStateAssignment_5");
					put(grammarAccess.getComponentAccess().getTransitionsAssignment_6(), "rule__Component__TransitionsAssignment_6");
					put(grammarAccess.getTransitionAccess().getNameAssignment_1(), "rule__Transition__NameAssignment_1");
					put(grammarAccess.getTransitionAccess().getFromStateAssignment_3(), "rule__Transition__FromStateAssignment_3");
					put(grammarAccess.getTransitionAccess().getToStateAssignment_5(), "rule__Transition__ToStateAssignment_5");
					put(grammarAccess.getTransitionAccess().getTriggeringEventAssignment_7(), "rule__Transition__TriggeringEventAssignment_7");
					put(grammarAccess.getTransitionAccess().getGuardStatesAssignment_8_0_2(), "rule__Transition__GuardStatesAssignment_8_0_2");
					put(grammarAccess.getTransitionAccess().getGuardStatesAssignment_8_1_2(), "rule__Transition__GuardStatesAssignment_8_1_2");
					put(grammarAccess.getTransitionAccess().getGuardStatesAssignment_8_1_3_1(), "rule__Transition__GuardStatesAssignment_8_1_3_1");
					put(grammarAccess.getTransitionAccess().getGeneratedEventAssignment_9_1(), "rule__Transition__GeneratedEventAssignment_9_1");
					put(grammarAccess.getStateAccess().getNameAssignment_1(), "rule__State__NameAssignment_1");
					put(grammarAccess.getEventAccess().getNameAssignment_1(), "rule__Event__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr.internal.InternalBehaviorDSLParser typedParser = (hu.bme.mit.rnd.behavior.text.ui.contentassist.antlr.internal.InternalBehaviorDSLParser) parser;
			typedParser.entryRuleSystem();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BehaviorDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BehaviorDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
