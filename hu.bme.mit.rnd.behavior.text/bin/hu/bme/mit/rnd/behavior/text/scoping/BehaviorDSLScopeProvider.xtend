/*
 * generated by Xtext
 */
package hu.bme.mit.rnd.behavior.text.scoping

import org.eclipse.emf.ecore.EReference
import Behavior.Transition
import org.eclipse.xtext.scoping.Scopes
import Behavior.Component
import Behavior.System
import Behavior.State

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
class BehaviorDSLScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	def scope_Transition_guardStates(Transition t, EReference ref){
		val trancomp=t.eContainer as Component
		val sys=trancomp.eContainer as System
		Scopes::scopeFor(sys.eAllContents.filter(typeof(State)).toIterable);
       // Scopes::scopeFor((t.eContainer as EntityRelationDiagram).entities.filter[x | x != ctx]);
    }
}
